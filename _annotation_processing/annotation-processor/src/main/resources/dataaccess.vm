package $packageName;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import ${entityType};
#if($keyType.beginsWith("java.lang.") == false)import ${keyType};#end

public class $implName implements $dataAccessName {

@PersistenceContext
private EntityManager em;

public ${entityName} selectById(${keyName} id) {

return em.find(${entityName}.class, id);
}

public ${entityName} insert(${entityName} newRecord) {

em.getTransaction().begin();
em.persist(newRecord);
em.getTransaction().commit();
return newRecord;
}

public void update(${entityName} updatedRecord) {

em.getTransaction().begin();
em.merge(updatedRecord);
em.getTransaction().commit();
}

public void delete(${entityName} deletedRecord) {

em.getTransaction().begin();
em.remove(deletedRecord);
em.getTransaction().commit();
}
#foreach($query in $queryNames)

// TO-DO: method name and parameters should be obtained from the annotated type
public List<${entityName}> getByCustomCriteria(String criteria1, String criteria2) {

// TO-DO: add logic needed to ask persistence engine for query results
// ${queryStrings.get($query)}
return null;
}
#end
}
